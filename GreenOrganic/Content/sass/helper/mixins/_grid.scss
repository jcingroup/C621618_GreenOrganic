@charset "UTF-8";


@mixin make-grid-columns($columns: $grid-columns, $gap: $gutter, $breakpoints: $grid-breakpoints) {
    $col-all: ();

    // Common properties for all breakpoints
    %grid-column {
        position: relative;
        // Prevent columns from collapsing when empty
        min-height: 1px;
        // Inner gutter via padding
        padding-right: ($gutter / 2);
        padding-left: ($gutter / 2);

        @if $enable-flex {
            width: 100%;
        }
    }
    // 全營幕通用
    @for $i from 1 through $columns {
        .col-#{$i} {
            @extend %float-l;
            @extend %grid-column;
            @include make-col($i, $grid-columns, $gutter);
        }
    }

    $breakpoint-counter: 0;
    @each $breakpoint, $value in $breakpoints {
        $breakpoint-counter: ($breakpoint-counter + 1);

        @for $i from 1 through $columns {
            .col-#{$breakpoint}-#{$i} {
                @extend %grid-column;
            }
            @if not $enable-flex {
                $col-all: $col-all, '.col-#{$breakpoint}-#{$i}';
            }
        }

        @include mq($value) {
            // Provide basic `.col-{bp}` classes for equal-width flexbox columns
            @if $enable-flex {
                .col-#{$breakpoint} {
                    flex-basis: 0;
                    flex-grow: 1;
                    max-width: 100%;
                }
            } @else {
                #{$col-all} { float: left; }
            }

            @for $i from 1 through $columns {
                .col-#{$breakpoint}-#{$i} {
                    @include make-col($i, $columns, $gutter);
                }
            }

            @each $modifier in (pull, push) {
                @for $i from 0 through $columns {
                    .#{$modifier}-#{$breakpoint}-#{$i} {
                        @include make-col-modifier($modifier, $i, $columns)
                    }
                }
            }

            // `$columns - 1` because offsetting by the width of an entire row isn't possible
            @for $i from 0 through ($columns - 1) {
                @if $breakpoint-counter != 1 or $i != 0 { // Avoid emitting useless .offset-xs-0
                    .offset-#{$breakpoint}-#{$i} {
                        @include make-col-modifier(offset, $i, $columns)
                    }
                }
            }
        }
    }
}

@mixin make-col($size, $columns: $grid-columns, $gutter: $grid-gutter-width) {
    @if $enable-flex {
        flex: 0 0 percentage($size / $columns);
        max-width: percentage($size / $columns);
    } @else {
        width: percentage($size / $columns);
    }
}

@mixin make-col-modifier($type, $size, $columns) {
    // Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)
    @if $type == push {
        right: if($size > 0, percentage($size / $columns), auto);
    }
    @else if $type == pull {
        right: if($size > 0, percentage($size / $columns), auto);
    }
    @else if $type == offset {
        margin-left: percentage($size / $columns);
    }
}
